[project]
name = "automated-actions"
version = "0.1.0"
description = "Automated Actions Server"
authors = [{ name = "AppSRE", email = "sd-app-sre@redhat.com" }]
license = { text = "Apache 2.0" }
readme = "README.md"
requires-python = "~= 3.12.0"
dependencies = [
    "automated-actions-utils",
    "celery[sqs]==5.5.3",
    "fastapi==0.116.0",
    "fastapi-mcp==0.3.4",
    # 3.5.2 needs newer graphql-core, but qenerate doesn't support it yet
    "httpx==0.28.1",
    "hvac==2.3.0",
    "itsdangerous==2.2.0",
    "kubernetes==33.1.0",
    "prometheus-fastapi-instrumentator==7.1.0",
    "pydantic-settings==2.10.1",
    "pydantic==2.11.7",
    "pyjwt==2.10.1",
    "pynamodb==6.1.0",
    "requests-toolbelt==1.0.0",
    "types-hvac==2.3.0.20250516",
    "uvicorn==0.35.0",
    "watchdog==6.0.0",
]

[project.urls]
homepage = "https://github.com/app-sre/automated-actions"
repository = "https://github.com/app-sre/automated-actions"
documentation = "https://github.com/app-sre/automated-actions"

[dependency-groups]
dev = [
    # Development dependencies
    "mypy==1.16.1",
    "pytest-asyncio==1.0.0",
    "pytest-cov==6.2.1",
    "pytest-httpx==0.35.0",
    "pytest-mock==3.14.1",
    "pytest==8.4.1",
    "requests-mock==1.12.1",
    "ruff==0.12.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["automated_actions"]

[tool.hatch.build.targets.wheel]
only-include = ["automated_actions"]

# Ruff configuration
[tool.ruff]
line-length = 88
src = ["automated_actions"]
extend-exclude = [
    # exclude some common cache and tmp directories
    ".local",
    ".cache",
    "tmp",
]
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "ANN401",  # allow typings.Any
    "CPY",     # Missing copyright header
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D106",    # Missing docstring in nested public class
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D211",    # No blank lines allowed before class docstring
    "D212",    # multi-line-summary-first-line
    "D213",    # multi-line-summary-second-line
    "D4",      # Doc string style
    "E501",    # Line too long
    "FIX002",  # TODO comment found
    "G004",    # Logging statement uses f-string
    "PLR0904", # Too many public methods
    "PLR0913", # Too many arguments
    "PLR0917", # Too many positional arguments
    "S101",    # Use of assert detected. Pytest uses assert
    "S404",    # subprocess import
    "EM101",   # Exception must not use a string literal, assign to variable first
    "EM102",   # Exception must not use an f-string literal, assign to variable first
    "TRY003",  # Avoid specifying long messages outside the exception class
    "TRY300",  # try-consider-else
    "TC002",   # type-checking-block
    "TC003",   # type-checking-block
    # pydoclint
    "DOC",
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]
[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["automated_actions"]

# Mypy configuration
[tool.mypy]
files = ["automated_actions"]
enable_error_code = ["truthy-bool", "redundant-expr"]
plugins = ["pydantic.mypy"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
# Below are all of the packages that don't implement stub packages. Mypy will throw an error if we don't ignore the
# missing imports. See: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
module = ["celery.*", "fastapi_mcp.*", "kubernetes.*", "billiard.einfo.*"]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

# [tool.coverage.report]
# fail_under = 90
